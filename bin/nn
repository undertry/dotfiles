#!/run/current-system/sw/bin/bash

BASE_DIR="$HOME/Documents/Notes"
DATE=$(date +%Y-%m-%d)
TIME=$(date +%H-%M)
DATETIME="${DATE}_${TIME}"

# Menú de selección de tipo con iconos
echo "📘 ¿Qué tipo de nota querés crear?"
echo "1) 🛠 project"
echo "2) 📚 study"
echo "3) 📓 journal"
read -rp "Elegí una opción [1-3]: " type_choice

case $type_choice in
  1) tipo="project" ;;
  2) tipo="study" ;;
  3) tipo="journal" ;;
  *) echo "❌ Opción inválida"; exit 1 ;;
esac

# 📁 Selección de carpeta para study o project
if [[ $tipo == "study" || $tipo == "project" ]]; then
  echo "📂 Categorías disponibles en '$tipo':"
  subfolders=($(find "$BASE_DIR/$tipo" -mindepth 1 -maxdepth 1 -type d -exec basename {} \; 2>/dev/null))

  if [ ${#subfolders[@]} -eq 0 ]; then
    echo "🆕 No hay subcarpetas creadas aún."
    read -rp "📝 Ingresá el nombre de la nueva categoría: " subdir
  else
    select folder in "${subfolders[@]}" "➕ Crear nueva categoría"; do
      if [[ $folder == "➕ Crear nueva categoría" ]]; then
        read -rp "📝 Nombre de la nueva categoría: " subdir
        break
      elif [[ -n $folder ]]; then
        subdir="$folder"
        break
      else
        echo "❌ Opción inválida"
      fi
    done
  fi
  DIR="$BASE_DIR/$tipo/$subdir"
  mkdir -p "$DIR"
fi

# 🏷 Tags (excepto para journal)
if [[ $tipo != "journal" ]]; then
  read -rp "🏷 Tags (separados por espacio): " tags_input
  tags=$(echo "$tags_input" | tr ' ' ', ')
fi

# 📄 Título y nombre del archivo
if [[ $tipo == "journal" ]]; then
  titulo="$DATETIME"
  DIR="$BASE_DIR/journal"
  mkdir -p "$DIR"
  FILENAME="$DIR/$DATETIME.md"
else
  read -rp "📄 Título de la nota: " titulo
  slug=$(echo "$titulo" | tr '[:upper:]' '[:lower:]' | tr ' ' '-' | tr -cd '[:alnum:]-')
  FILENAME="$DIR/$slug.md"
fi

# 🧩 Plantillas
case $tipo in
  project)
    template=$'\n# Objetivo\n\n# Progreso\n\n# Tareas\n- [ ] Primera tarea'
    ;;
  study)
    template=$'\n# Resumen\n\n# Conceptos clave\n\n# Notas adicionales'
    ;;
  journal)
    template=$'\n# Reflexiones del día\n\n# Qué aprendí\n\n# Cómo me sentí'
    ;;
esac

# 📄 Contenido del archivo
{
  echo "---"
  echo "title: \"$titulo\""
  echo "type: $tipo"
  echo "status: In progress"
  echo "start_date: \"$DATE\""
  # Para journal, no se pone end_date
  [[ $tipo != "journal" ]] && echo "end_date: \"\""
  [[ $tipo != "journal" ]] && echo "tags: [$tags]"
  echo "---"
  echo ""
  echo "# $titulo"
  echo "$template"
} > "$FILENAME"

echo "✅ Nota creada en: $FILENAME"
hx "$FILENAME"

# Para study y project, preguntar si se finalizó la nota
if [[ $tipo != "journal" ]]; then
  read -rp "🟢 ¿Finalizaste esta nota? [s/n]: " FINISH
  if [[ $FINISH =~ ^[sS]$ ]]; then
    end_date=$(date +%Y-%m-%d)
    sed -i "s/status: In progress/status: Finished/" "$FILENAME"
    sed -i "s/end_date: \"\"/end_date: \"$end_date\"/" "$FILENAME"
  fi
fi

# 👀 Visualización
echo "👀 ¿Querés visualizar la nota?"
select view_opt in "No" "Glow" "Grip" "Pandoc"; do
  case $view_opt in
    No) break ;;
    Glow) glow "$FILENAME"; break ;;
    Grip) grip "$FILENAME"; break ;;
    Pandoc)
      HTML_FILE="${FILENAME%.md}.html"
      pandoc "$FILENAME" -s -o "$HTML_FILE"
      live-server --quiet "$(dirname "$HTML_FILE")" &
      SERVER_PID=$!
      sleep 1  # Espera a que live-server inicie
      URL="http://127.0.0.1:8080/$(basename "$HTML_FILE")"
      xdg-open "$URL"
      echo "Presioná Enter cuando termines de visualizar la nota..."
      read -r
      kill "$SERVER_PID" 2>/dev/null
      read -rp "🗑 ¿Borrar el HTML generado? (s/n): " borrar
      [[ $borrar == [sS] ]] && rm "$HTML_FILE"
      break
      ;;
    *) echo "❌ Opción inválida" ;;
  esac
done
